openapi: 3.0.0
info:
  title: Library Management System API
  description: API documentation for the Library Management System
  version: 1.0.0
servers:
  - url: http://localhost:5000/api
    description: Local development server
paths:
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid input
  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User logged in successfully
        '401':
          description: Invalid credentials
  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
  /books:
    get:
      summary: Get all books
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBook'
      responses:
        '201':
          description: Book added successfully
        '400':
          description: Invalid input
  /books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A book object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBook'
      responses:
        '200':
          description: Book updated successfully
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Book deleted successfully
        '404':
          description: Book not found
  /borrow:
    post:
      summary: Borrow a book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BorrowBook'
      responses:
        '201':
          description: Book borrowed successfully
        '400':
          description: Invalid input
  /borrow/{id}:
    put:
      summary: Return a borrowed book
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book returned successfully
        '404':
          description: Borrow record not found
components:
  schemas:
    RegisterUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
    LoginUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
    UpdateUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
    Book:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
    AddBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
    UpdateBook:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
    BorrowBook:
      type: object
      properties:
        userId:
          type: string
        bookId:
          type: string
